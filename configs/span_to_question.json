{
    "dataset_reader": {
        "type": "qfirst_qasrl",
        "token_indexers": {
            "elmo": {
                "type": "elmo_characters"
            }
        },
        "qasrl_filter": {
            "min_answers": 1,
            "min_valid_answers": 1
        },
        "instance_reader": {
            "type": "verb_qas"
        },
        "include_metadata": true
    },
    "train_data_path": "dev-mini.jsonl",
    "validation_data_path": "dev-mini.jsonl",
    // "train_data_path": "qasrl-v2_1/expanded/train.jsonl.gz",
    // "validation_data_path": "qasrl-v2_1/expanded/dev.jsonl.gz",
    "model": {
        "type": "qasrl_span_to_question",
        "text_field_embedder": {
            "elmo": {
                "type": "elmo_token_embedder",
                "options_file": "https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_options.json",
                "weight_file": "https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_weights.hdf5",
                "do_layer_norm": false,
                "dropout": 0.5
            }
        },
        "sentence_encoder": {
            "type": "alternating_lstm",
            "input_size": 1124,
            "hidden_size": 300,
            "num_layers": 4,
            "recurrent_dropout_probability": 0.1,
            "use_highway": true
        },
        "question_generator": {
            "slot_names": ["wh", "aux", "subj", "verb", "obj", "prep", "obj2"],
            "input_dim": 600,
            "slot_hidden_dim":100,
            "rnn_hidden_dim": 200,
            "slot_embedding_dim":100,
            "num_layers": 4,
            "share_rnn_cell": false
        },
        "predicate_feature_dim": 100
  },
  "iterator": {
    "type": "bucket",
    "sorting_keys": [["text", "num_tokens"]],
    "batch_size" : 256
  },
  "trainer": {
    "num_epochs": 200,
    "grad_norm": 1.0,
    "patience": 3,
    "validation_metric": "+full-question-accuracy",
    "cuda_device": -1,
    "optimizer": {
      "type": "adadelta",
      "rho": 0.95
    }
  }
}
