{
    "dataset_reader": {
        "type": "qfirst_qasrl",
        "token_indexers": {
            "elmo": {
                "type": "elmo_characters"
            }
        },
        "qasrl_filter": {
            "min_answers": 1,
            "min_valid_answers": 0
        },
        "instance_reader": {
            "type": "question"
        },
        "include_metadata": true
    },
    "train_data_path": "dev-mini.jsonl",
    "validation_data_path": "dev-mini.jsonl",
    // "train_data_path": "qasrl-v2_1/expanded/train.jsonl.gz",
    // "validation_data_path": "qasrl-v2_1/expanded/dev.jsonl.gz",
    // "test_data_path": "qasrl-v2_1/orig/test.jsonl.gz",
    "model": {
        "type": "question_answerer",
        "objective": "binary",
        "span_selection_policy": "union",
        "question_injection": "bottom",
        "predicate_feature_dim": 100,
        "span_hidden_dim": 100,
        "text_field_embedder": {
            "elmo": {
                "type": "elmo_token_embedder",
                "options_file": "https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_options.json",
                "weight_file": "https://s3-us-west-2.amazonaws.com/allennlp/models/elmo/2x4096_512_2048cnn_2xhighway/elmo_2x4096_512_2048cnn_2xhighway_weights.hdf5",
                "do_layer_norm": false,
                "dropout": 0.5
            }
        },
        "stacked_encoder": {
            "type": "alternating_lstm",
            "use_highway": true,
            "input_size": 1224,
            "hidden_size": 300,
            "num_layers": 8,
            "recurrent_dropout_probability": 0.1
        },
        "question_encoder": {
            "type": "sequential",
            "slot_names": ["wh", "aux", "subj", "verb", "obj", "prep", "obj2"],
            "dim_rnn_hidden": 100,
            "input_dim": 1024,
            "rnn_layers": 2,
            "share_rnn_cell": false
        }
    },
    "iterator": {
        "type": "bucket",
        "sorting_keys": [["text", "num_tokens"]],
        "batch_size": 200
    },
    "trainer": {
        "num_epochs": 200,
        "grad_norm": 1.0,
        "patience": 3,
        "validation_metric": "+span-f1",
        "cuda_device": -1,
        "optimizer": {
            "type": "adadelta",
            "rho": 0.95
        }
    }
}
