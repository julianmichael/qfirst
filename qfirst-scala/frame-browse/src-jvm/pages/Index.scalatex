@package qfirst.frame.browse.pages
@import qfirst.frame.browse._
@param config: PageConfig

@import scalacss.internal.{Css, Renderer}
@import scalatags.Text.TypedTag
@def scalatagsStyleTagRenderer(implicit s: Renderer[String]): Renderer[TypedTag[String]] = {
  // workaround to prevent the default style tag renderer from escaping quotes in the CSS
  new Renderer[TypedTag[String]] {
    override def apply(css: Css) = scalatags.Text.all.tag("style")(`type` := "text/css", raw(s(css)))
  }
}

@import io.circe.syntax._

@html(lang := "en")
  @head
    @meta(charset := "utf-8")
    @meta(
      name := "viewport",
      content := "width=device-width, initial-scale=1, shrink-to-fit=no")
    @config.bootstrapLink
    @tag("title"){Browse QA-SRL Verb Frames}
  @body
    @div(id := SharedConstants.mainDivElementId)
      @p{Loading JavaScript...}
    @input(
      `type` := "hidden",
      value := config.docApiUrl,
      id := SharedConstants.docApiUrlElementId
    )
    @input(
      `type` := "hidden",
      value := config.verbApiUrl,
      id := SharedConstants.verbApiUrlElementId
    )
    @input(
      `type` := "hidden",
      value := config.dataSetting.toString,
      id := SharedConstants.dataSettingElementId
    )
    @input(
      `type` := "hidden",
      value := config.featureApiUrl,
      id := SharedConstants.featureApiUrlElementId
    )
    @input(
      `type` := "hidden",
      value := io.circe.Printer.noSpaces.pretty(config.mode.asJson),
      id := SharedConstants.devFlagElementId
    )
    @config.bootstrapScripts
    @script(src := "/" + config.jsDepsPath)
    @script(src := "/" + config.jsPath)